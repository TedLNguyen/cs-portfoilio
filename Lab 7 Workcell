double Magnet5_duration = 500.0;
float myVariable;

event message1 = event();

// "when Brain screen pressed" hat block
void onevent_Brain_screen_pressed_0() {
  if (Brain.Screen.xPosition() > 250.0) {
    if (Brain.Screen.yPosition() > 125.0) {
      // Blue Box Pressed
      RoboticArm1.moveToPositionJoint(10.5, 5.0, 3.0);
      wait(1.0, seconds);
      Magnet5.drop();
    }
    else {
      // Green Box Pressed
      RoboticArm1.moveToPositionJoint(8.0, 5.0, 3.0);
      wait(1.0, seconds);
      Magnet5.drop();
    }
  }
  else {
    if (Brain.Screen.yPosition() > 125.0) {
      // Red Box Pressed
      RoboticArm1.moveToPositionJoint(10.5, 3.0, 2.0);
      wait(1.0, seconds);
      Magnet5.drop();
    }
    else {
      // White Box Pressed
      RoboticArm1.moveToPositionJoint(8.7, -5.7, 4.6);
      wait(1.0, seconds);
      // Point 2
      RoboticArm1.moveToPositionJoint(8.7, -5.7, 0.15);
      wait(1.0, seconds);
      Magnet5.pickup(Magnet5_duration);
      // Point 1
      RoboticArm1.moveToPositionJoint(8.7, -5.7, 4.6);
      wait(1.0, seconds);
    }
  }
}

// "when started" hat block
int whenStarted1() {
  RoboticArm1.setMasteringValues(1884.0,1925.0,1925.0,492.0);
  RoboticArm1.setToolTipOffset(-0.7, 0.0, -2.0);
  Magnet5.setPower(100.0);
  Magnet5_duration = 1000;
  Optical6.setLightPower(100.0, percent);
  return 0;
}

// "when EStop pressed" hat block
void onevent_EStop_pressed_0() {
  RoboticArm1.emergencyStop();
}


int main() {
  // register event handlers
  Brain.Screen.pressed(onevent_Brain_screen_pressed_0);
  EStop.pressed(onevent_EStop_pressed_0);

  wait(15, msec);
  // post event registration

  // set default print color to black
  printf("\033[30m");

  // wait for rotation sensor to fully initialize
  wait(30, msec);

  whenStarted1();
}
